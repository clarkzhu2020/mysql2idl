// refer to  https://www.cloudwego.io/zh/docs/hertz/tutorials/toolkit/toolkit/
syntax = "proto3";

// {{ .TableName }} service
package {{ .TableName }};

import "include/api.proto";
import "include/base.proto";

// biz/model
option go_package = "/{{ .TableName }}";

//==========API request Define below==========================

// table items
message {{ .TableName1 }} {
  {{ .TableItem }}
}

// repeated data for query
message Data {
  int32 page        = 1;
  int32 total_items = 2;
  int32 total_page  = 3;
  repeated {{ .TableName1 }} data = 4;
}

// Create_service
message Create{{ .TableName1 }}Request {
  {{ .NewItems }}
}

message Create{{ .TableName1 }}Response {
  base.StatusCode status_code = 1;  // 0 or 1, failed or succeed
  string          msg         = 2;
  {{ .TableName1 }} data = 3;
}

// Query_service
message Query{{ .TableName1 }}Request {
  string           key_word  = 1;
  base.PageInfoReq page_info = 2;
}

message Query{{ .TableName1 }}Response {
  base.StatusCode status_code = 1;  // 0 or 1, failed or succeed
  string          msg         = 2;
  Data            data        = 3;
}

// Delete_service
message Delete{{ .TableName1 }}Request {
  int32 {{ .IdItem }} = 1;
}

message Delete{{ .TableName1 }}Response {
  base.StatusCode status_code = 1;  // 0 or 1, failed or succeed
  string          msg         = 2;
}

// Update_service
message Update{{ .TableName1 }}Request {
  {{ .UpdateItems }}
}

message Update{{ .TableName1 }}Response {
  base.StatusCode status_code = 1;  // 0 or 1, failed or succeed
  string          msg         = 2;
}

// Define Service Routine
service {{ .TableName1 }}Service {
  rpc Create(Create{{ .TableName1 }}Request) returns (Create{{ .TableName1 }}Response) {
    option (api.post) = "/api/{{.TableName}}/create";
  }

  rpc Query(Query{{ .TableName1}}Request) returns (Query{{ .TableName1 }}Response) {
    option (api.get) = "/api/{{.TableName}}/query";
  }

  rpc Delete(Delete{{ .TableName1 }}Request) returns (Delete{{ .TableName1 }}Response) {
    option (api.delete) = "/api/{{.TableName}}/delete";
  }

  rpc Update(Update{{ .TableName1 }}Request) returns (Update{{ .TableName1 }}Response) {
    option (api.put) = "/api/{{.TableName}}/update";
  }
}