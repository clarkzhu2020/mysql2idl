// refer to  https://www.cloudwego.io/zh/docs/hertz/tutorials/toolkit/toolkit/

namespace go {{ .TableName }}
namespace py {{ .TableName }}
namespace java {{ .TableName }}
namespace rs {{ .TableName }}


enum Code {
     Success         = 1
     ParamInvalid    = 2
     DBErr           = 3
}


//table items
struct {{ .TableName1 }} {

{{ .TableItem }}

}

//Create_service
struct Create{{ .TableName1 }}Request{

{{ .NewItems }}

}

struct Create{{ .TableName1 }}Response{
   1: Code code
   2: string msg
}

//Query_service
struct Query{{ .TableName1 }}Request{
   1: optional string Keyword (api.body="keyword", api.form="keyword",api.query="keyword")
   2: i64 page (api.body="page", api.form="page",api.query="page",api.vd="$ > 0")
   3: i64 page_size (api.body="page_size", api.form="page_size",api.query="page_size",api.vd="($ > 0 || $ <= 100)")
}

struct Query{{ .TableName1 }}Response{
   1: Code code
   2: string msg
   3: list<{{ .TableName1 | html }}> {{ .TableName }}s
   4: i64 totoal
}

//Delete_service
struct Delete{{ .TableName1 }}Request{
   1: i64    {{ .IdItem }}   (api.path="{{ .IdItem }}",api.vd="$>0")
}

struct Delete{{ .TableName1 }}Response{
   1: Code code
   2: string msg
}

//Update_service
struct Update{{ .TableName1 }}Request{

{{ .UpdateItems }}

}

struct Update{{ .TableName1 }}Response{
   1: Code code
   2: string msg
}

//Define Service Routine
service {{ .TableName1 }}Service {
   Update{{ .TableName1 }}Response Update{{ .TableName1 }}(1:Update{{ .TableName1 }}Request req)(api.post="/v1/{{ .TableName }}/update/:{{ .IdItem }}")
   Delete{{ .TableName1 }}Response Delete{{ .TableName1 }}(1:Delete{{ .TableName1 }}Request req)(api.post="/v1/{{ .TableName }}/delete/:{{ .IdItem }}")
   Query{{ .TableName1}}Response  Query{{ .TableName1 }}(1: Query{{ .TableName1 }}Request req)(api.post="/v1/{{ .TableName }}/query/")
   Create{{ .TableName1 }}Response Create{{ .TableName1 }}(1:Create{{ .TableName1 }}Request req)(api.post="/v1/{{ .TableName }}/create/")
}