// Code generated by hertz generator.

package users

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	users "test/biz/model/users"
)

// UpdateUsers .
// @router /v1/users/update/:id [POST]
func UpdateUsers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req users.UpdateUsersRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(users.UpdateUsersResponse)

	c.JSON(consts.StatusOK, resp)
}

// DeleteUsers .
// @router /v1/users/delete/:id [POST]
func DeleteUsers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req users.DeleteUsersRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(users.DeleteUsersResponse)

	c.JSON(consts.StatusOK, resp)
}

// QueryUsers .
// @router /v1/users/query/ [POST]
func QueryUsers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req users.QueryUsersRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(users.QueryUsersResponse)

	c.JSON(consts.StatusOK, resp)
}

// CreateUsers .
// @router /v1/users/create/ [POST]
func CreateUsers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req users.CreateUsersRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(users.CreateUsersResponse)

	c.JSON(consts.StatusOK, resp)
}
